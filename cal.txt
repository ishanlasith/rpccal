struct num{
	float a;
	float b;
};

program CALCULATOR{
	version CALVERSION{
	   float sum(num)=1;
	   float sub(num)=2;
	   float mul(num)=3;
	   float div(num)=4;
	}=1;
}=0x12345678;


sever
	result=argp->a+argp->b;
	result=argp->a-argp->b;
	result=argp->a*argp->b;
	result=argp->a+argp->b;


client
/*
 * This is sample code generated by rpcgen.
 * These are only templates and you can use them
 * as a guideline for developing your own functions.
 */

#include "cal.h"


void
calculator_1(char *host)
{
	CLIENT *clnt;
	float  *result_1;
	num  sum_1_arg;
	float  *result_2;
	num  sub_1_arg;
	float  *result_3;
	num  mul_1_arg;
	float  *result_4;
	num  div_1_arg;

#ifndef	DEBUG
	clnt = clnt_create (host, CALCULATOR, CALVERSION, "udp");
	if (clnt == NULL) {
		clnt_pcreateerror (host);
		exit (1);
	}
	int choice;
	float num1,num2;

	while(1){
		printf("\n***CALCULATOR***\n");
		printf("Summation -> 1\n");
		printf("Substraction -> 2\n");
		printf("Multiplication -> 3\n");
		printf("Division -> 4\n");
		printf("Exit -> 5\n\n");

		printf("Enter the Choice: ");
		scanf("%d",&choice);

		printf("\nEnter the First Number: ");
		scanf("%f",&num1);
		printf("Enter the Second Number: ");
		scanf("%f",&num2);

		sum_1_arg.a=sub_1_arg.a=mul_1_arg.a=div_1_arg.a=num1;
		sum_1_arg.b=sub_1_arg.b=mul_1_arg.b=div_1_arg.b=num2;


		switch(choice){
		case 1:
				result_1 = sum_1(&sum_1_arg, clnt);
				if (result_1 == (float *) NULL) {
					clnt_perror (clnt, "call failed");
				}
				printf("\nSummation : %.2f\n",*result_1);
				break;

		case 2:
				result_2 = sub_1(&sub_1_arg, clnt);
				if (result_2 == (float *) NULL) {
					clnt_perror (clnt, "call failed");
				}
				printf("\nSubstraction : %.2f\n",*result_2);
				break;
		case 3:
			result_3 = mul_1(&mul_1_arg, clnt);
			if (result_3 == (float *) NULL) {
				clnt_perror (clnt, "call failed");
			}
			printf("\nMultiplication: %.2f\n",*result_3);
			break;

		case 4:
				result_4 = div_1(&div_1_arg, clnt);
				if (result_4 == (float *) NULL) {
					clnt_perror (clnt, "call failed");
				}
				printf("\nDivision: %.2f\n",*result_4);
				break;

		default:
			printf("Exit the System!!!!");
			return 0;



		}





	}


#endif	/* DEBUG */





#ifndef	DEBUG
	clnt_destroy (clnt);
#endif	 /* DEBUG */
}


int
main (int argc, char *argv[])
{
	char *host;

	if (argc < 2) {
		printf ("usage: %s server_host\n", argv[0]);
		exit (1);
	}
	host = argv[1];
	calculator_1 (host);
exit (0);
}

